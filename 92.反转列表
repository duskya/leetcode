/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} left
 * @param {number} right
 * @return {ListNode}
 */
var reverseBetween = function(head, left, right) {
    const list = new ListNode(-1);
    // console.log(list)
    list.next = head;
    let pre = list
    console.log(list,pre)

    for(let i=0; i<left - 1; ++i){
        console.log(i)
        pre = pre.next;
    }

    console.log("pre=",pre)
    let cur =pre.next
    console.log("cur=",cur)
    
    for(let i=0;i<right-left;++i){
        const next = cur.next
        console.log("next=",next)
        cur.next =next.next
        console.log("pre=",pre)
        console.log("cur=",cur)
        next.next = pre.next
        console.log("next=",next)
        pre.next = next
    }
    return list.next

};
